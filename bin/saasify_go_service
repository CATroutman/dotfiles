# Saasify
echo "start saasify"
gitgrepsed -i ".gitlab-ci.yml" "GOPRIVATE=in.thewardro.be" "GOPRIVATE=gitlab.com/lifechurch"
gitgrepsed -i ".gitlab-ci.yml" 'project: "youversion/' 'project: "lifechurch/youversion/'
gitgrepsed -i ".gitlab-ci.yml" 'project: youversion/' 'project: lifechurch/youversion/'
gitgrepsed -i "cluster_external_secret.yaml" "name: gitlab-vars-cluster-secret-store" "name: gitlab-saas-vars-cluster-secret-store"
gitgrepsed -i ".yaml" "https://in.thewardro.be/youversion" "https://gitlab.com/lifechurch/youversion"
gitgrepsed "yv-production/youversion" "yv-production/lifechurch/youversion"
gitgrepsed "registry.in.thewardro.be/docker/go" "golang"

# echo "project id lookup replace"
# # Lookup project id in project id mappings json file
# project_id=$(grep -Eo 'projectID: "(\d+)' $(git ls-files | grep "secret_store.yaml" | head -n 1) | cut -d\" -f2)
# if [[ -n $project_id ]]; then
#   new_id=$(jq -r --arg key "$project_id" '.[$key] // empty' /Users/coletroutman/code/other/saasify/id_mappings.json)
#   if [[ -n $new_id ]]; then
#     gitgrepsed -e ".go,go.mod,go.sum,Maker.Makefile" "projectID: \"$project_id\"" "projectID: \"$new_id\""
#   fi
# fi

echo "final in.thewardro.be replace"
# Run last to finish up remaining in.thewardro.be references
gitgrepsed -e ".go,go.mod,go.sum,Maker.Makefile" "in.thewardro.be" "gitlab.com"

echo "go mod replace"
# Update the go.mod file for the replace logic
if [[ -f go.mod ]]; then
  updated=$(grep -E "in.thewardro.be.*gitlab.com" go.mod)
  if [[ -z $updated ]]; then
    echo "\nreplace (" >>go.mod
    grep -Eo "(module.*)?in.thewardro.be.*" go.mod | grep -v 'module' | sed 's|$| =>|' >>go.mod
    echo ")" >>go.mod
    sed -i "" "s|\(in\.thewardro\.be\)\(.*\)\( .*\) =>|\t\1\2 => gitlab.com/lifechurch\2.git\3|g" go.mod
  fi
  go mod tidy
fi
